[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "string-multitool"
version = "2.2.0"
authors = [
    {name = "String_Multitool Development Team"},
]
description = "Advanced text transformation tool with modular architecture and RSA encryption"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Text Processing",
    "Topic :: Utilities",
    "Topic :: Security :: Cryptography",
]
keywords = ["text", "transformation", "clipboard", "encryption", "rsa", "unicode"]
dependencies = [
    "pyperclip>=1.8.0",
    "pynput>=1.7.0",
    "watchdog>=3.0.0",
    "cryptography>=41.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "pytest-timeout>=2.0.0",
    "pytest-benchmark>=4.0.0",
]
build = [
    "pyinstaller>=5.0.0",
]

[project.urls]
Homepage = "https://github.com/your-username/String-Multitool"
"Bug Reports" = "https://github.com/your-username/String-Multitool/issues"
"Source" = "https://github.com/your-username/String-Multitool"
"Documentation" = "https://github.com/your-username/String-Multitool#readme"

[project.scripts]
string-multitool = "String_Multitool:main"

[tool.setuptools]
py-modules = ["String_Multitool"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "test_transform.py",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["String_Multitool"]
omit = [
    "test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["String_Multitool"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true